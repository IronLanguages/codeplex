'------------------------------------------------------------------------------
'  <auto-generated>
'      This code was generated by coded UI test builder.
'      Version: 10.0.0.0
'
'      Changes to this file may cause incorrect behavior and will be lost if
'      the code is regenerated.
'  </auto-generated>
' ------------------------------------------------------------------------------

Imports System
Imports System.CodeDom.Compiler
Imports System.Collections.Generic
Imports System.Drawing
Imports System.Text.RegularExpressions
Imports System.Windows.Input
Imports Microsoft.VisualStudio.TestTools.UITest.Extension
Imports Microsoft.VisualStudio.TestTools.UITesting
Imports Microsoft.VisualStudio.TestTools.UITesting.WinControls
Imports Microsoft.VisualStudio.TestTools.UnitTesting
Imports Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard
Imports Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse
Imports MouseButtons = System.Windows.Forms.MouseButtons

Namespace WinFormsMapPoint
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Partial Public Class UIMap
        
        '''<summary>
        '''AssertFormV1 - Use 'AssertFormV1ExpectedValues' to pass parameters into this method.
        '''</summary>
        Public Sub AssertFormV1()
            Dim uIHelloWorldformV1pyClient As WinClient = Me.UIHelloWorldformV1pyWindow.UIHelloWorldformV1pyClient

            'Verify that 'Hello World (formV1.py)' client's property 'Name' equals 'Hello World (formV1.py)'
            Assert.AreEqual(Me.AssertFormV1ExpectedValues.UIHelloWorldformV1pyClientName, uIHelloWorldformV1pyClient.Name)
        End Sub
        
        '''<summary>
        '''CloseFormV1
        '''</summary>
        Public Sub CloseFormV1()
            Dim uIHelloWorldformV1pyTitleBar As WinTitleBar = Me.UIHelloWorldformV1pyWindow.UIHelloWorldformV1pyTitleBar
            Dim uICloseButton As WinButton = Me.UIHelloWorldformV1pyWindow.UIHelloWorldformV1pyTitleBar.UICloseButton

            'Click 'Hello World (formV1.py)' title bar
            Mouse.Click(uIHelloWorldformV1pyTitleBar, New Point(163, 7))

            'Click 'Close' button
            Mouse.Click(uICloseButton, New Point(17, 10))
        End Sub
        
        '''<summary>
        '''ClickButtonFormV2
        '''</summary>
        Public Sub ClickButtonFormV2()
            Dim uIMessageButton As WinButton = Me.UIHelloWorldformV2pyWindow.UIHelloWorldformV2pyClient.UIMessageButton

            'Click 'Message' button
            Mouse.Click(uIMessageButton, New Point(42, 10))
        End Sub
        
        '''<summary>
        '''AssertFormV2 - Use 'AssertFormV2ExpectedValues' to pass parameters into this method.
        '''</summary>
        Public Sub AssertFormV2()
            Dim uIHelloWorldText As WinText = Me.UIHelloWorldWindow.UIHelloWorldText

            'Verify that 'Hello World' label's property 'DisplayText' equals 'Hello World'
            Assert.AreEqual(Me.AssertFormV2ExpectedValues.UIHelloWorldTextDisplayText, uIHelloWorldText.DisplayText)
        End Sub
        
        '''<summary>
        '''CloseFormV2
        '''</summary>
        Public Sub CloseFormV2()
            Dim uIOKButton As WinButton = Me.UIOKWindow.UIOKButton
            Dim uICloseButton As WinButton = Me.UIHelloWorldformV2pyWindow.UIHelloWorldformV2pyTitleBar.UICloseButton

            'Click 'OK' button
            Mouse.Click(uIOKButton, New Point(52, 9))

            'Click 'Close' button
            Mouse.Click(uICloseButton, New Point(12, 7))
        End Sub
        
        '''<summary>
        '''InsertMessageFormV3 - Use 'InsertMessageFormV3Params' to pass parameters into this method.
        '''</summary>
        Public Sub InsertMessageFormV3()
            Dim uIEnterMessageEdit As WinEdit = Me.UIHelloWorldformV3pyWindow.UIHelloWorldformV3pyClient.UIEnterMessageEdit
            Dim uIMessageButton As WinButton = Me.UIHelloWorldformV3pyWindow.UIHelloWorldformV3pyClient.UIMessageButton

            'Type 'hi' in 'Enter Message:' text box
            uIEnterMessageEdit.Text = Me.InsertMessageFormV3Params.UIEnterMessageEditText

            'Click 'Message' button
            Mouse.Click(uIMessageButton, New Point(50, 6))
        End Sub
        
        '''<summary>
        '''AssertFormV3 - Use 'AssertFormV3ExpectedValues' to pass parameters into this method.
        '''</summary>
        Public Sub AssertFormV3()
            Dim uIHIText As WinText = Me.UIMessageWindow.UIHIWindow.UIHIText

            'Verify that 'hi' label's property 'DisplayText' equals 'hi'
            Assert.AreEqual(Me.AssertFormV3ExpectedValues.UIHITextDisplayText, uIHIText.DisplayText)
        End Sub
        
        '''<summary>
        '''CloseFormV3
        '''</summary>
        Public Sub CloseFormV3()
            Dim uIOKButton As WinButton = Me.UIMessageWindow.UIOKWindow.UIOKButton
            Dim uICloseButton As WinButton = Me.UIHelloWorldformV3pyWindow.UIHelloWorldformV3pyTitleBar.UICloseButton

            'Click 'OK' button
            Mouse.Click(uIOKButton, New Point(51, 11))

            'Click 'Close' button
            Mouse.Click(uICloseButton, New Point(15, 8))
        End Sub
        
        '''<summary>
        '''InsertMessageFormV4 - Use 'InsertMessageFormV4Params' to pass parameters into this method.
        '''</summary>
        Public Sub InsertMessageFormV4()
            Dim uIEnterMessageEdit As WinEdit = Me.UIHelloWorldformv4pyWindow.UIHelloWorldformv4pyClient.UIEnterMessageEdit
            Dim uIMessageButton As WinButton = Me.UIHelloWorldformv4pyWindow.UIHelloWorldformv4pyClient.UIMessageButton

            'Type 'hi2' in 'Enter Message:' text box
            uIEnterMessageEdit.Text = Me.InsertMessageFormV4Params.UIEnterMessageEditText

            'Click 'Message' button
            Mouse.Click(uIMessageButton, New Point(32, 10))
        End Sub
        
        '''<summary>
        '''AssertFormV4 - Use 'AssertFormV4ExpectedValues' to pass parameters into this method.
        '''</summary>
        Public Sub AssertFormV4()
            Dim uIHi2Text As WinText = Me.UIMessageWindow.UIHIWindow.UIHi2Text

            'Verify that 'hi2' label's property 'DisplayText' equals 'hi2'
            Assert.AreEqual(Me.AssertFormV4ExpectedValues.UIHi2TextDisplayText, uIHi2Text.DisplayText)
        End Sub
        
        '''<summary>
        '''CloseFormV4
        '''</summary>
        Public Sub CloseFormV4()
            Dim uIOKButton As WinButton = Me.UIMessageWindow.UIOKWindow.UIOKButton
            Dim uICloseButton As WinButton = Me.UIHelloWorldformv4pyWindow.UIHelloWorldformv4pyTitleBar.UICloseButton

            'Click 'OK' button
            Mouse.Click(uIOKButton, New Point(55, 13))

            'Click 'Close' button
            Mouse.Click(uICloseButton, New Point(10, 11))
        End Sub
        
        '''<summary>
        '''InsertMessageFormV5 - Use 'InsertMessageFormV5Params' to pass parameters into this method.
        '''</summary>
        Public Sub InsertMessageFormV5()
            Dim uIHelloWorldformV5pyTitleBar As WinTitleBar = Me.UIHelloWorldformV5pyWindow.UIHelloWorldformV5pyTitleBar
            Dim uIEnterMessageEdit As WinEdit = Me.UIHelloWorldformV5pyWindow.UIItemWindow.UIHelloWorldformV5pyClient.UIEnterMessageEdit
            Dim uIMessageButton As WinButton = Me.UIHelloWorldformV5pyWindow.UIItemWindow.UIHelloWorldformV5pyClient.UIMessageButton

            'Click 'Hello World (formV5.py)' title bar
            Mouse.Click(uIHelloWorldformV5pyTitleBar, New Point(77, 7))

            'Type 'hi3' in 'Enter Message:' text box
            uIEnterMessageEdit.Text = Me.InsertMessageFormV5Params.UIEnterMessageEditText

            'Click 'Message' button
            Mouse.Click(uIMessageButton, New Point(42, 5))
        End Sub
        
        '''<summary>
        '''AssertFormV5 - Use 'AssertFormV5ExpectedValues' to pass parameters into this method.
        '''</summary>
        Public Sub AssertFormV5()
            Dim uIHi3Text As WinText = Me.UIMessageWindow.UIHIWindow.UIHi3Text

            'Verify that 'hi3' label's property 'DisplayText' equals 'hi3'
            Assert.AreEqual(Me.AssertFormV5ExpectedValues.UIHi3TextDisplayText, uIHi3Text.DisplayText)
        End Sub
        
        '''<summary>
        '''CloseFormV5
        '''</summary>
        Public Sub CloseFormV5()
            Dim uIOKButton As WinButton = Me.UIMessageWindow.UIOKWindow.UIOKButton
            Dim uICloseButton As WinButton = Me.UIHelloWorldformV5pyWindow.UIHelloWorldformV5pyTitleBar.UICloseButton

            'Click 'OK' button
            Mouse.Click(uIOKButton, New Point(61, 13))

            'Click 'Close' button
            Mouse.Click(uICloseButton, New Point(14, 7))
        End Sub
        
        '''<summary>
        '''InsertMessageFormV6 - Use 'InsertMessageFormV6Params' to pass parameters into this method.
        '''</summary>
        Public Sub InsertMessageFormV6()
            Dim uIFormV6pyTitleBar As WinTitleBar = Me.UIFormV6pyWindow.UIFormV6pyTitleBar
            Dim uIEnterMessageEdit As WinEdit = Me.UIFormV6pyWindow.UIItemWindow.UIFormV6pyClient.UIEnterMessageEdit
            Dim uIMessageButton As WinButton = Me.UIFormV6pyWindow.UIItemWindow.UIFormV6pyClient.UIMessageButton

            'Click '(formV6.py)' title bar
            Mouse.Click(uIFormV6pyTitleBar, New Point(59, 9))

            'Type 'www.bing.com' in 'Enter Message' text box
            uIEnterMessageEdit.Text = Me.InsertMessageFormV6Params.UIEnterMessageEditText

            'Click 'Message' button
            Mouse.Click(uIMessageButton, New Point(35, 7))
        End Sub
        
        '''<summary>
        '''AssertFormV6 - Use 'AssertFormV6ExpectedValues' to pass parameters into this method.
        '''</summary>
        Public Sub AssertFormV6()
            Dim uIFormV6pyTitleBar As WinTitleBar = Me.UIFormV6pyWindow.UIFormV6pyTitleBar

            'Verify that '(formV6.py)' title bar's property 'FriendlyName' equals '(formV6.py)'
            Assert.AreEqual(Me.AssertFormV6ExpectedValues.UIFormV6pyTitleBarFriendlyName, uIFormV6pyTitleBar.FriendlyName)
        End Sub
        
        '''<summary>
        '''CloseFormV6
        '''</summary>
        Public Sub CloseFormV6()
            Dim uIFormV6pyTitleBar As WinTitleBar = Me.UIFormV6pyWindow.UIFormV6pyTitleBar
            Dim uICloseButton As WinButton = Me.UIFormV6pyWindow.UIFormV6pyTitleBar.UICloseButton

            'Click '(formV6.py)' title bar
            Mouse.Click(uIFormV6pyTitleBar, New Point(375, 7))

            'Click 'Close' button
            Mouse.Click(uICloseButton, New Point(9, 10))
        End Sub
        
        '''<summary>
        '''GetMapFormV7 - Use 'GetMapFormV7Params' to pass parameters into this method.
        '''</summary>
        Public Sub GetMapFormV7()
            Dim uIFormV7pyTitleBar As WinTitleBar = Me.UIFormV7pyWindow.UIFormV7pyTitleBar
            Dim uIFormV7pyWindow As WinWindow = Me.UIFormV7pyWindow
            Dim uIEnterlocationEdit As WinEdit = Me.UIFormV7pyWindow.UIItemWindow.UIFormV7pyClient.UIEnterlocationEdit
            Dim uIGetmapButton As WinButton = Me.UIFormV7pyWindow.UIItemWindow.UIFormV7pyClient.UIGetmapButton

            'Click '(formV7.py)' title bar
            Mouse.Click(uIFormV7pyTitleBar, New Point(58, 6))

            'Maximize window '(formV7.py)'.
            uIFormV7pyWindow.Maximized = Me.GetMapFormV7Params.UIFormV7pyWindowMaximized

            'Type 'redmond,wa' in 'Enter location:' text box
            uIEnterlocationEdit.Text = Me.GetMapFormV7Params.UIEnterlocationEditText

            'Click 'Get map' button
            Mouse.Click(uIGetmapButton, New Point(62, 12))
        End Sub
        
        '''<summary>
        '''AssertFormV7 - Use 'AssertFormV7ExpectedValues' to pass parameters into this method.
        '''</summary>
        Public Sub AssertFormV7()
            Dim uIFormV7pyClient As WinClient = Me.UIFormV7pyWindow.UIItemWindow1.UIFormV7pyClient

            'Verify that '(formV7.py)' client's property 'FriendlyName' equals '(formV7.py)'
            Assert.AreEqual(Me.AssertFormV7ExpectedValues.UIFormV7pyClientFriendlyName, uIFormV7pyClient.FriendlyName)
        End Sub
        
        '''<summary>
        '''CloseFormV7
        '''</summary>
        Public Sub CloseFormV7()
            Dim uIFormV7pyTitleBar As WinTitleBar = Me.UIFormV7pyWindow.UIFormV7pyTitleBar
            Dim uICloseButton As WinButton = Me.UIFormV7pyWindow.UIFormV7pyTitleBar.UICloseButton

            'Click '(formV7.py)' title bar
            Mouse.Click(uIFormV7pyTitleBar, New Point(1461, 9))

            'Click 'Close' button
            Mouse.Click(uICloseButton, New Point(15, 8))
        End Sub
        
        '''<summary>
        '''GetMapFormV8 - Use 'GetMapFormV8Params' to pass parameters into this method.
        '''</summary>
        Public Sub GetMapFormV8()
            Dim uIFormV8pyWindow As WinWindow = Me.UIFormV8pyWindow
            Dim uIEnterstartlocationEdit As WinEdit = Me.UIFormV8pyWindow.UIItemWindow.UIFormV8pyClient.UIEnterstartlocationEdit
            Dim uIEnterendlocationEdit As WinEdit = Me.UIFormV8pyWindow.UIItemWindow1.UIFormV8pyClient.UIEnterendlocationEdit
            Dim uIGetmapButton As WinButton = Me.UIFormV8pyWindow.UIItemWindow1.UIFormV8pyClient.UIGetmapButton

            'Maximize window '(formV8.py)'.
            uIFormV8pyWindow.Maximized = Me.GetMapFormV8Params.UIFormV8pyWindowMaximized

            'Type 'redmond, wa' in 'Enter start location:' text box
            uIEnterstartlocationEdit.Text = Me.GetMapFormV8Params.UIEnterstartlocationEditText

            'Type 'kirkland, wa' in 'Enter end location:' text box
            uIEnterendlocationEdit.Text = Me.GetMapFormV8Params.UIEnterendlocationEditText

            'Click 'Get map' button
            Mouse.Click(uIGetmapButton, New Point(50, 10))
        End Sub
        
        '''<summary>
        '''AssertFormV8 - Use 'AssertFormV8ExpectedValues' to pass parameters into this method.
        '''</summary>
        Public Sub AssertFormV8()
            Dim uIFormV8pyClient As WinClient = Me.UIFormV8pyWindow.UIItemWindow2.UIFormV8pyClient

            'Verify that '(formV8.py)' client's property 'FriendlyName' equals '(formV8.py)'
            Assert.AreEqual(Me.AssertFormV8ExpectedValues.UIFormV8pyClientFriendlyName, uIFormV8pyClient.FriendlyName)
        End Sub
        
        '''<summary>
        '''CloseFormV8
        '''</summary>
        Public Sub CloseFormV8()
            Dim uIFormV8pyTitleBar As WinTitleBar = Me.UIFormV8pyWindow.UIFormV8pyTitleBar
            Dim uICloseButton As WinButton = Me.UIFormV8pyWindow.UIFormV8pyTitleBar.UICloseButton

            'Click '(formV8.py)' title bar
            Mouse.Click(uIFormV8pyTitleBar, New Point(1405, 0))

            'Click 'Close' button
            Mouse.Click(uICloseButton, New Point(17, 13))
        End Sub
        
        #Region "Properties"
        Public Overridable ReadOnly Property AssertFormV1ExpectedValues() As AssertFormV1ExpectedValues
            Get
                If (Me.mAssertFormV1ExpectedValues Is Nothing) Then
                    Me.mAssertFormV1ExpectedValues = New AssertFormV1ExpectedValues()
                End If
                Return Me.mAssertFormV1ExpectedValues
            End Get
        End Property
        
        Public Overridable ReadOnly Property AssertFormV2ExpectedValues() As AssertFormV2ExpectedValues
            Get
                If (Me.mAssertFormV2ExpectedValues Is Nothing) Then
                    Me.mAssertFormV2ExpectedValues = New AssertFormV2ExpectedValues()
                End If
                Return Me.mAssertFormV2ExpectedValues
            End Get
        End Property
        
        Public Overridable ReadOnly Property InsertMessageFormV3Params() As InsertMessageFormV3Params
            Get
                If (Me.mInsertMessageFormV3Params Is Nothing) Then
                    Me.mInsertMessageFormV3Params = New InsertMessageFormV3Params()
                End If
                Return Me.mInsertMessageFormV3Params
            End Get
        End Property
        
        Public Overridable ReadOnly Property AssertFormV3ExpectedValues() As AssertFormV3ExpectedValues
            Get
                If (Me.mAssertFormV3ExpectedValues Is Nothing) Then
                    Me.mAssertFormV3ExpectedValues = New AssertFormV3ExpectedValues()
                End If
                Return Me.mAssertFormV3ExpectedValues
            End Get
        End Property
        
        Public Overridable ReadOnly Property InsertMessageFormV4Params() As InsertMessageFormV4Params
            Get
                If (Me.mInsertMessageFormV4Params Is Nothing) Then
                    Me.mInsertMessageFormV4Params = New InsertMessageFormV4Params()
                End If
                Return Me.mInsertMessageFormV4Params
            End Get
        End Property
        
        Public Overridable ReadOnly Property AssertFormV4ExpectedValues() As AssertFormV4ExpectedValues
            Get
                If (Me.mAssertFormV4ExpectedValues Is Nothing) Then
                    Me.mAssertFormV4ExpectedValues = New AssertFormV4ExpectedValues()
                End If
                Return Me.mAssertFormV4ExpectedValues
            End Get
        End Property
        
        Public Overridable ReadOnly Property InsertMessageFormV5Params() As InsertMessageFormV5Params
            Get
                If (Me.mInsertMessageFormV5Params Is Nothing) Then
                    Me.mInsertMessageFormV5Params = New InsertMessageFormV5Params()
                End If
                Return Me.mInsertMessageFormV5Params
            End Get
        End Property
        
        Public Overridable ReadOnly Property AssertFormV5ExpectedValues() As AssertFormV5ExpectedValues
            Get
                If (Me.mAssertFormV5ExpectedValues Is Nothing) Then
                    Me.mAssertFormV5ExpectedValues = New AssertFormV5ExpectedValues()
                End If
                Return Me.mAssertFormV5ExpectedValues
            End Get
        End Property
        
        Public Overridable ReadOnly Property InsertMessageFormV6Params() As InsertMessageFormV6Params
            Get
                If (Me.mInsertMessageFormV6Params Is Nothing) Then
                    Me.mInsertMessageFormV6Params = New InsertMessageFormV6Params()
                End If
                Return Me.mInsertMessageFormV6Params
            End Get
        End Property
        
        Public Overridable ReadOnly Property AssertFormV6ExpectedValues() As AssertFormV6ExpectedValues
            Get
                If (Me.mAssertFormV6ExpectedValues Is Nothing) Then
                    Me.mAssertFormV6ExpectedValues = New AssertFormV6ExpectedValues()
                End If
                Return Me.mAssertFormV6ExpectedValues
            End Get
        End Property
        
        Public Overridable ReadOnly Property GetMapFormV7Params() As GetMapFormV7Params
            Get
                If (Me.mGetMapFormV7Params Is Nothing) Then
                    Me.mGetMapFormV7Params = New GetMapFormV7Params()
                End If
                Return Me.mGetMapFormV7Params
            End Get
        End Property
        
        Public Overridable ReadOnly Property AssertFormV7ExpectedValues() As AssertFormV7ExpectedValues
            Get
                If (Me.mAssertFormV7ExpectedValues Is Nothing) Then
                    Me.mAssertFormV7ExpectedValues = New AssertFormV7ExpectedValues()
                End If
                Return Me.mAssertFormV7ExpectedValues
            End Get
        End Property
        
        Public Overridable ReadOnly Property GetMapFormV8Params() As GetMapFormV8Params
            Get
                If (Me.mGetMapFormV8Params Is Nothing) Then
                    Me.mGetMapFormV8Params = New GetMapFormV8Params()
                End If
                Return Me.mGetMapFormV8Params
            End Get
        End Property
        
        Public Overridable ReadOnly Property AssertFormV8ExpectedValues() As AssertFormV8ExpectedValues
            Get
                If (Me.mAssertFormV8ExpectedValues Is Nothing) Then
                    Me.mAssertFormV8ExpectedValues = New AssertFormV8ExpectedValues()
                End If
                Return Me.mAssertFormV8ExpectedValues
            End Get
        End Property
        
        Public ReadOnly Property UIHelloWorldformV1pyWindow() As UIHelloWorldformV1pyWindow
            Get
                If (Me.mUIHelloWorldformV1pyWindow Is Nothing) Then
                    Me.mUIHelloWorldformV1pyWindow = New UIHelloWorldformV1pyWindow()
                End If
                Return Me.mUIHelloWorldformV1pyWindow
            End Get
        End Property
        
        Public ReadOnly Property UIHelloWorldformV2pyWindow() As UIHelloWorldformV2pyWindow
            Get
                If (Me.mUIHelloWorldformV2pyWindow Is Nothing) Then
                    Me.mUIHelloWorldformV2pyWindow = New UIHelloWorldformV2pyWindow()
                End If
                Return Me.mUIHelloWorldformV2pyWindow
            End Get
        End Property
        
        Public ReadOnly Property UIHelloWorldWindow() As UIHelloWorldWindow
            Get
                If (Me.mUIHelloWorldWindow Is Nothing) Then
                    Me.mUIHelloWorldWindow = New UIHelloWorldWindow()
                End If
                Return Me.mUIHelloWorldWindow
            End Get
        End Property
        
        Public ReadOnly Property UIOKWindow() As UIOKWindow
            Get
                If (Me.mUIOKWindow Is Nothing) Then
                    Me.mUIOKWindow = New UIOKWindow()
                End If
                Return Me.mUIOKWindow
            End Get
        End Property
        
        Public ReadOnly Property UIHelloWorldformV3pyWindow() As UIHelloWorldformV3pyWindow
            Get
                If (Me.mUIHelloWorldformV3pyWindow Is Nothing) Then
                    Me.mUIHelloWorldformV3pyWindow = New UIHelloWorldformV3pyWindow()
                End If
                Return Me.mUIHelloWorldformV3pyWindow
            End Get
        End Property
        
        Public ReadOnly Property UIMessageWindow() As UIMessageWindow
            Get
                If (Me.mUIMessageWindow Is Nothing) Then
                    Me.mUIMessageWindow = New UIMessageWindow()
                End If
                Return Me.mUIMessageWindow
            End Get
        End Property
        
        Public ReadOnly Property UIHelloWorldformv4pyWindow() As UIHelloWorldformv4pyWindow
            Get
                If (Me.mUIHelloWorldformv4pyWindow Is Nothing) Then
                    Me.mUIHelloWorldformv4pyWindow = New UIHelloWorldformv4pyWindow()
                End If
                Return Me.mUIHelloWorldformv4pyWindow
            End Get
        End Property
        
        Public ReadOnly Property UIHelloWorldformV5pyWindow() As UIHelloWorldformV5pyWindow
            Get
                If (Me.mUIHelloWorldformV5pyWindow Is Nothing) Then
                    Me.mUIHelloWorldformV5pyWindow = New UIHelloWorldformV5pyWindow()
                End If
                Return Me.mUIHelloWorldformV5pyWindow
            End Get
        End Property
        
        Public ReadOnly Property UIFormV6pyWindow() As UIFormV6pyWindow
            Get
                If (Me.mUIFormV6pyWindow Is Nothing) Then
                    Me.mUIFormV6pyWindow = New UIFormV6pyWindow()
                End If
                Return Me.mUIFormV6pyWindow
            End Get
        End Property
        
        Public ReadOnly Property UIFormV7pyWindow() As UIFormV7pyWindow
            Get
                If (Me.mUIFormV7pyWindow Is Nothing) Then
                    Me.mUIFormV7pyWindow = New UIFormV7pyWindow()
                End If
                Return Me.mUIFormV7pyWindow
            End Get
        End Property
        
        Public ReadOnly Property UIFormV8pyWindow() As UIFormV8pyWindow
            Get
                If (Me.mUIFormV8pyWindow Is Nothing) Then
                    Me.mUIFormV8pyWindow = New UIFormV8pyWindow()
                End If
                Return Me.mUIFormV8pyWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mAssertFormV1ExpectedValues As AssertFormV1ExpectedValues
        
        Private mAssertFormV2ExpectedValues As AssertFormV2ExpectedValues
        
        Private mInsertMessageFormV3Params As InsertMessageFormV3Params
        
        Private mAssertFormV3ExpectedValues As AssertFormV3ExpectedValues
        
        Private mInsertMessageFormV4Params As InsertMessageFormV4Params
        
        Private mAssertFormV4ExpectedValues As AssertFormV4ExpectedValues
        
        Private mInsertMessageFormV5Params As InsertMessageFormV5Params
        
        Private mAssertFormV5ExpectedValues As AssertFormV5ExpectedValues
        
        Private mInsertMessageFormV6Params As InsertMessageFormV6Params
        
        Private mAssertFormV6ExpectedValues As AssertFormV6ExpectedValues
        
        Private mGetMapFormV7Params As GetMapFormV7Params
        
        Private mAssertFormV7ExpectedValues As AssertFormV7ExpectedValues
        
        Private mGetMapFormV8Params As GetMapFormV8Params
        
        Private mAssertFormV8ExpectedValues As AssertFormV8ExpectedValues
        
        Private mUIHelloWorldformV1pyWindow As UIHelloWorldformV1pyWindow
        
        Private mUIHelloWorldformV2pyWindow As UIHelloWorldformV2pyWindow
        
        Private mUIHelloWorldWindow As UIHelloWorldWindow
        
        Private mUIOKWindow As UIOKWindow
        
        Private mUIHelloWorldformV3pyWindow As UIHelloWorldformV3pyWindow
        
        Private mUIMessageWindow As UIMessageWindow
        
        Private mUIHelloWorldformv4pyWindow As UIHelloWorldformv4pyWindow
        
        Private mUIHelloWorldformV5pyWindow As UIHelloWorldformV5pyWindow
        
        Private mUIFormV6pyWindow As UIFormV6pyWindow
        
        Private mUIFormV7pyWindow As UIFormV7pyWindow
        
        Private mUIFormV8pyWindow As UIFormV8pyWindow
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'AssertFormV1'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class AssertFormV1ExpectedValues
        
        #Region "Fields"
        '''<summary>
        '''Verify that 'Hello World (formV1.py)' client's property 'Name' equals 'Hello World (formV1.py)'
        '''</summary>
        Public UIHelloWorldformV1pyClientName As String = "Hello World (formV1.py)"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'AssertFormV2'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class AssertFormV2ExpectedValues
        
        #Region "Fields"
        '''<summary>
        '''Verify that 'Hello World' label's property 'DisplayText' equals 'Hello World'
        '''</summary>
        Public UIHelloWorldTextDisplayText As String = "Hello World"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'InsertMessageFormV3'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class InsertMessageFormV3Params
        
        #Region "Fields"
        '''<summary>
        '''Type 'hi' in 'Enter Message:' text box
        '''</summary>
        Public UIEnterMessageEditText As String = "hi"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'AssertFormV3'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class AssertFormV3ExpectedValues
        
        #Region "Fields"
        '''<summary>
        '''Verify that 'hi' label's property 'DisplayText' equals 'hi'
        '''</summary>
        Public UIHITextDisplayText As String = "hi"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'InsertMessageFormV4'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class InsertMessageFormV4Params
        
        #Region "Fields"
        '''<summary>
        '''Type 'hi2' in 'Enter Message:' text box
        '''</summary>
        Public UIEnterMessageEditText As String = "hi2"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'AssertFormV4'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class AssertFormV4ExpectedValues
        
        #Region "Fields"
        '''<summary>
        '''Verify that 'hi2' label's property 'DisplayText' equals 'hi2'
        '''</summary>
        Public UIHi2TextDisplayText As String = "hi2"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'InsertMessageFormV5'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class InsertMessageFormV5Params
        
        #Region "Fields"
        '''<summary>
        '''Type 'hi3' in 'Enter Message:' text box
        '''</summary>
        Public UIEnterMessageEditText As String = "hi3"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'AssertFormV5'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class AssertFormV5ExpectedValues
        
        #Region "Fields"
        '''<summary>
        '''Verify that 'hi3' label's property 'DisplayText' equals 'hi3'
        '''</summary>
        Public UIHi3TextDisplayText As String = "hi3"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'InsertMessageFormV6'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class InsertMessageFormV6Params
        
        #Region "Fields"
        '''<summary>
        '''Type 'www.bing.com' in 'Enter Message' text box
        '''</summary>
        Public UIEnterMessageEditText As String = "www.bing.com"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'AssertFormV6'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class AssertFormV6ExpectedValues
        
        #Region "Fields"
        '''<summary>
        '''Verify that '(formV6.py)' title bar's property 'FriendlyName' equals '(formV6.py)'
        '''</summary>
        Public UIFormV6pyTitleBarFriendlyName As String = "(formV6.py)"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'GetMapFormV7'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class GetMapFormV7Params
        
        #Region "Fields"
        '''<summary>
        '''Maximize window '(formV7.py)'.
        '''</summary>
        Public UIFormV7pyWindowMaximized As Boolean = true
        
        '''<summary>
        '''Type 'redmond,wa' in 'Enter location:' text box
        '''</summary>
        Public UIEnterlocationEditText As String = "redmond,wa"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'AssertFormV7'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class AssertFormV7ExpectedValues
        
        #Region "Fields"
        '''<summary>
        '''Verify that '(formV7.py)' client's property 'FriendlyName' equals '(formV7.py)'
        '''</summary>
        Public UIFormV7pyClientFriendlyName As String = "(formV7.py)"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'GetMapFormV8'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class GetMapFormV8Params
        
        #Region "Fields"
        '''<summary>
        '''Maximize window '(formV8.py)'.
        '''</summary>
        Public UIFormV8pyWindowMaximized As Boolean = true
        
        '''<summary>
        '''Type 'redmond, wa' in 'Enter start location:' text box
        '''</summary>
        Public UIEnterstartlocationEditText As String = "redmond, wa"
        
        '''<summary>
        '''Type 'kirkland, wa' in 'Enter end location:' text box
        '''</summary>
        Public UIEnterendlocationEditText As String = "kirkland, wa"
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'AssertFormV8'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class AssertFormV8ExpectedValues
        
        #Region "Fields"
        '''<summary>
        '''Verify that '(formV8.py)' client's property 'FriendlyName' equals '(formV8.py)'
        '''</summary>
        Public UIFormV8pyClientFriendlyName As String = "(formV8.py)"
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHelloWorldformV1pyWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Hello World (formV1.py)"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("Hello World (formV1.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIHelloWorldformV1pyClient() As WinClient
            Get
                If (Me.mUIHelloWorldformV1pyClient Is Nothing) Then
                    Me.mUIHelloWorldformV1pyClient = New WinClient(Me)
                    Me.mUIHelloWorldformV1pyClient.SearchProperties(WinControl.PropertyNames.Name) = "Hello World (formV1.py)"
                    Me.mUIHelloWorldformV1pyClient.WindowTitles.Add("Hello World (formV1.py)")
                End If
                Return Me.mUIHelloWorldformV1pyClient
            End Get
        End Property
        
        Public ReadOnly Property UIHelloWorldformV1pyTitleBar() As UIHelloWorldformV1pyTitleBar
            Get
                If (Me.mUIHelloWorldformV1pyTitleBar Is Nothing) Then
                    Me.mUIHelloWorldformV1pyTitleBar = New UIHelloWorldformV1pyTitleBar(Me)
                End If
                Return Me.mUIHelloWorldformV1pyTitleBar
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIHelloWorldformV1pyClient As WinClient
        
        Private mUIHelloWorldformV1pyTitleBar As UIHelloWorldformV1pyTitleBar
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHelloWorldformV1pyTitleBar
        Inherits WinTitleBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("Hello World (formV1.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICloseButton() As WinButton
            Get
                If (Me.mUICloseButton Is Nothing) Then
                    Me.mUICloseButton = New WinButton(Me)
                    Me.mUICloseButton.SearchProperties(WinButton.PropertyNames.Name) = "Close"
                    Me.mUICloseButton.WindowTitles.Add("Hello World (formV1.py)")
                End If
                Return Me.mUICloseButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICloseButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHelloWorldformV2pyWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Hello World (formV2.py)"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("Hello World (formV2.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIHelloWorldformV2pyClient() As UIHelloWorldformV2pyClient
            Get
                If (Me.mUIHelloWorldformV2pyClient Is Nothing) Then
                    Me.mUIHelloWorldformV2pyClient = New UIHelloWorldformV2pyClient(Me)
                End If
                Return Me.mUIHelloWorldformV2pyClient
            End Get
        End Property
        
        Public ReadOnly Property UIHelloWorldformV2pyTitleBar() As UIHelloWorldformV2pyTitleBar
            Get
                If (Me.mUIHelloWorldformV2pyTitleBar Is Nothing) Then
                    Me.mUIHelloWorldformV2pyTitleBar = New UIHelloWorldformV2pyTitleBar(Me)
                End If
                Return Me.mUIHelloWorldformV2pyTitleBar
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIHelloWorldformV2pyClient As UIHelloWorldformV2pyClient
        
        Private mUIHelloWorldformV2pyTitleBar As UIHelloWorldformV2pyTitleBar
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHelloWorldformV2pyClient
        Inherits WinClient
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinControl.PropertyNames.Name) = "Hello World (formV2.py)"
            Me.WindowTitles.Add("Hello World (formV2.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIMessageButton() As WinButton
            Get
                If (Me.mUIMessageButton Is Nothing) Then
                    Me.mUIMessageButton = New WinButton(Me)
                    Me.mUIMessageButton.SearchProperties(WinButton.PropertyNames.Name) = "Message"
                    Me.mUIMessageButton.WindowTitles.Add("Hello World (formV2.py)")
                End If
                Return Me.mUIMessageButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIMessageButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHelloWorldformV2pyTitleBar
        Inherits WinTitleBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("Hello World (formV2.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICloseButton() As WinButton
            Get
                If (Me.mUICloseButton Is Nothing) Then
                    Me.mUICloseButton = New WinButton(Me)
                    Me.mUICloseButton.SearchProperties(WinButton.PropertyNames.Name) = "Close"
                    Me.mUICloseButton.WindowTitles.Add("Hello World (formV2.py)")
                End If
                Return Me.mUICloseButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICloseButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHelloWorldWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Hello World"
            Me.SearchProperties(WinWindow.PropertyNames.ClassName) = "Static"
            Me.WindowTitles.Add("Hello World")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIHelloWorldText() As WinText
            Get
                If (Me.mUIHelloWorldText Is Nothing) Then
                    Me.mUIHelloWorldText = New WinText(Me)
                    Me.mUIHelloWorldText.SearchProperties(WinText.PropertyNames.Name) = "Hello World"
                    Me.mUIHelloWorldText.WindowTitles.Add("Hello World")
                End If
                Return Me.mUIHelloWorldText
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIHelloWorldText As WinText
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIOKWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "OK"
            Me.SearchProperties(WinWindow.PropertyNames.ClassName) = "Button"
            Me.WindowTitles.Add("OK")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIOKButton() As WinButton
            Get
                If (Me.mUIOKButton Is Nothing) Then
                    Me.mUIOKButton = New WinButton(Me)
                    Me.mUIOKButton.SearchProperties(WinButton.PropertyNames.Name) = "OK"
                    Me.mUIOKButton.WindowTitles.Add("OK")
                End If
                Return Me.mUIOKButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIOKButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHelloWorldformV3pyWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Hello World (formV3.py)"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("Hello World (formV3.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIHelloWorldformV3pyClient() As UIHelloWorldformV3pyClient
            Get
                If (Me.mUIHelloWorldformV3pyClient Is Nothing) Then
                    Me.mUIHelloWorldformV3pyClient = New UIHelloWorldformV3pyClient(Me)
                End If
                Return Me.mUIHelloWorldformV3pyClient
            End Get
        End Property
        
        Public ReadOnly Property UIHelloWorldformV3pyTitleBar() As UIHelloWorldformV3pyTitleBar
            Get
                If (Me.mUIHelloWorldformV3pyTitleBar Is Nothing) Then
                    Me.mUIHelloWorldformV3pyTitleBar = New UIHelloWorldformV3pyTitleBar(Me)
                End If
                Return Me.mUIHelloWorldformV3pyTitleBar
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIHelloWorldformV3pyClient As UIHelloWorldformV3pyClient
        
        Private mUIHelloWorldformV3pyTitleBar As UIHelloWorldformV3pyTitleBar
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHelloWorldformV3pyClient
        Inherits WinClient
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinControl.PropertyNames.Name) = "Hello World (formV3.py)"
            Me.WindowTitles.Add("Hello World (formV3.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIEnterMessageEdit() As WinEdit
            Get
                If (Me.mUIEnterMessageEdit Is Nothing) Then
                    Me.mUIEnterMessageEdit = New WinEdit(Me)
                    Me.mUIEnterMessageEdit.SearchProperties(WinEdit.PropertyNames.Name) = "Enter Message:"
                    Me.mUIEnterMessageEdit.WindowTitles.Add("Hello World (formV3.py)")
                End If
                Return Me.mUIEnterMessageEdit
            End Get
        End Property
        
        Public ReadOnly Property UIMessageButton() As WinButton
            Get
                If (Me.mUIMessageButton Is Nothing) Then
                    Me.mUIMessageButton = New WinButton(Me)
                    Me.mUIMessageButton.SearchProperties(WinButton.PropertyNames.Name) = "Message"
                    Me.mUIMessageButton.WindowTitles.Add("Hello World (formV3.py)")
                End If
                Return Me.mUIMessageButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIEnterMessageEdit As WinEdit
        
        Private mUIMessageButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHelloWorldformV3pyTitleBar
        Inherits WinTitleBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("Hello World (formV3.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICloseButton() As WinButton
            Get
                If (Me.mUICloseButton Is Nothing) Then
                    Me.mUICloseButton = New WinButton(Me)
                    Me.mUICloseButton.SearchProperties(WinButton.PropertyNames.Name) = "Close"
                    Me.mUICloseButton.WindowTitles.Add("Hello World (formV3.py)")
                End If
                Return Me.mUICloseButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICloseButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIMessageWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Message"
            Me.SearchProperties(WinWindow.PropertyNames.ClassName) = "#32770"
            Me.WindowTitles.Add("Message")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIHIWindow() As UIHIWindow
            Get
                If (Me.mUIHIWindow Is Nothing) Then
                    Me.mUIHIWindow = New UIHIWindow(Me)
                End If
                Return Me.mUIHIWindow
            End Get
        End Property
        
        Public ReadOnly Property UIOKWindow() As UIOKWindow1
            Get
                If (Me.mUIOKWindow Is Nothing) Then
                    Me.mUIOKWindow = New UIOKWindow1(Me)
                End If
                Return Me.mUIOKWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIHIWindow As UIHIWindow
        
        Private mUIOKWindow As UIOKWindow1
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHIWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlId) = "65535"
            Me.WindowTitles.Add("Message")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIHIText() As WinText
            Get
                If (Me.mUIHIText Is Nothing) Then
                    Me.mUIHIText = New WinText(Me)
                    Me.mUIHIText.SearchProperties(WinText.PropertyNames.Name) = "hi"
                    Me.mUIHIText.WindowTitles.Add("Message")
                End If
                Return Me.mUIHIText
            End Get
        End Property
        
        Public ReadOnly Property UIHi2Text() As WinText
            Get
                If (Me.mUIHi2Text Is Nothing) Then
                    Me.mUIHi2Text = New WinText(Me)
                    Me.mUIHi2Text.SearchProperties(WinText.PropertyNames.Name) = "hi2"
                    Me.mUIHi2Text.WindowTitles.Add("Message")
                End If
                Return Me.mUIHi2Text
            End Get
        End Property
        
        Public ReadOnly Property UIHi3Text() As WinText
            Get
                If (Me.mUIHi3Text Is Nothing) Then
                    Me.mUIHi3Text = New WinText(Me)
                    Me.mUIHi3Text.SearchProperties(WinText.PropertyNames.Name) = "hi3"
                    Me.mUIHi3Text.WindowTitles.Add("Message")
                End If
                Return Me.mUIHi3Text
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIHIText As WinText
        
        Private mUIHi2Text As WinText
        
        Private mUIHi3Text As WinText
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIOKWindow1
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlId) = "2"
            Me.WindowTitles.Add("Message")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIOKButton() As WinButton
            Get
                If (Me.mUIOKButton Is Nothing) Then
                    Me.mUIOKButton = New WinButton(Me)
                    Me.mUIOKButton.SearchProperties(WinButton.PropertyNames.Name) = "OK"
                    Me.mUIOKButton.WindowTitles.Add("Message")
                End If
                Return Me.mUIOKButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIOKButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHelloWorldformv4pyWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Hello World (formv4.py)"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("Hello World (formv4.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIHelloWorldformv4pyClient() As UIHelloWorldformv4pyClient
            Get
                If (Me.mUIHelloWorldformv4pyClient Is Nothing) Then
                    Me.mUIHelloWorldformv4pyClient = New UIHelloWorldformv4pyClient(Me)
                End If
                Return Me.mUIHelloWorldformv4pyClient
            End Get
        End Property
        
        Public ReadOnly Property UIHelloWorldformv4pyTitleBar() As UIHelloWorldformv4pyTitleBar
            Get
                If (Me.mUIHelloWorldformv4pyTitleBar Is Nothing) Then
                    Me.mUIHelloWorldformv4pyTitleBar = New UIHelloWorldformv4pyTitleBar(Me)
                End If
                Return Me.mUIHelloWorldformv4pyTitleBar
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIHelloWorldformv4pyClient As UIHelloWorldformv4pyClient
        
        Private mUIHelloWorldformv4pyTitleBar As UIHelloWorldformv4pyTitleBar
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHelloWorldformv4pyClient
        Inherits WinClient
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinControl.PropertyNames.Name) = "Hello World (formv4.py)"
            Me.WindowTitles.Add("Hello World (formv4.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIEnterMessageEdit() As WinEdit
            Get
                If (Me.mUIEnterMessageEdit Is Nothing) Then
                    Me.mUIEnterMessageEdit = New WinEdit(Me)
                    Me.mUIEnterMessageEdit.SearchProperties(WinEdit.PropertyNames.Name) = "Enter Message:"
                    Me.mUIEnterMessageEdit.WindowTitles.Add("Hello World (formv4.py)")
                End If
                Return Me.mUIEnterMessageEdit
            End Get
        End Property
        
        Public ReadOnly Property UIMessageButton() As WinButton
            Get
                If (Me.mUIMessageButton Is Nothing) Then
                    Me.mUIMessageButton = New WinButton(Me)
                    Me.mUIMessageButton.SearchProperties(WinButton.PropertyNames.Name) = "Message"
                    Me.mUIMessageButton.WindowTitles.Add("Hello World (formv4.py)")
                End If
                Return Me.mUIMessageButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIEnterMessageEdit As WinEdit
        
        Private mUIMessageButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHelloWorldformv4pyTitleBar
        Inherits WinTitleBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("Hello World (formv4.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICloseButton() As WinButton
            Get
                If (Me.mUICloseButton Is Nothing) Then
                    Me.mUICloseButton = New WinButton(Me)
                    Me.mUICloseButton.SearchProperties(WinButton.PropertyNames.Name) = "Close"
                    Me.mUICloseButton.WindowTitles.Add("Hello World (formv4.py)")
                End If
                Return Me.mUICloseButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICloseButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHelloWorldformV5pyWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Hello World (formV5.py)"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("Hello World (formV5.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIHelloWorldformV5pyTitleBar() As UIHelloWorldformV5pyTitleBar
            Get
                If (Me.mUIHelloWorldformV5pyTitleBar Is Nothing) Then
                    Me.mUIHelloWorldformV5pyTitleBar = New UIHelloWorldformV5pyTitleBar(Me)
                End If
                Return Me.mUIHelloWorldformV5pyTitleBar
            End Get
        End Property
        
        Public ReadOnly Property UIItemWindow() As UIItemWindow
            Get
                If (Me.mUIItemWindow Is Nothing) Then
                    Me.mUIItemWindow = New UIItemWindow(Me)
                End If
                Return Me.mUIItemWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIHelloWorldformV5pyTitleBar As UIHelloWorldformV5pyTitleBar
        
        Private mUIItemWindow As UIItemWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHelloWorldformV5pyTitleBar
        Inherits WinTitleBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("Hello World (formV5.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICloseButton() As WinButton
            Get
                If (Me.mUICloseButton Is Nothing) Then
                    Me.mUICloseButton = New WinButton(Me)
                    Me.mUICloseButton.SearchProperties(WinButton.PropertyNames.Name) = "Close"
                    Me.mUICloseButton.WindowTitles.Add("Hello World (formV5.py)")
                End If
                Return Me.mUICloseButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICloseButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIItemWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("Hello World (formV5.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIHelloWorldformV5pyClient() As UIHelloWorldformV5pyClient
            Get
                If (Me.mUIHelloWorldformV5pyClient Is Nothing) Then
                    Me.mUIHelloWorldformV5pyClient = New UIHelloWorldformV5pyClient(Me)
                End If
                Return Me.mUIHelloWorldformV5pyClient
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIHelloWorldformV5pyClient As UIHelloWorldformV5pyClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIHelloWorldformV5pyClient
        Inherits WinClient
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("Hello World (formV5.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIEnterMessageEdit() As WinEdit
            Get
                If (Me.mUIEnterMessageEdit Is Nothing) Then
                    Me.mUIEnterMessageEdit = New WinEdit(Me)
                    Me.mUIEnterMessageEdit.SearchProperties(WinEdit.PropertyNames.Name) = "Enter Message:"
                    Me.mUIEnterMessageEdit.WindowTitles.Add("Hello World (formV5.py)")
                End If
                Return Me.mUIEnterMessageEdit
            End Get
        End Property
        
        Public ReadOnly Property UIMessageButton() As WinButton
            Get
                If (Me.mUIMessageButton Is Nothing) Then
                    Me.mUIMessageButton = New WinButton(Me)
                    Me.mUIMessageButton.SearchProperties(WinButton.PropertyNames.Name) = "Message"
                    Me.mUIMessageButton.WindowTitles.Add("Hello World (formV5.py)")
                End If
                Return Me.mUIMessageButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIEnterMessageEdit As WinEdit
        
        Private mUIMessageButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIFormV6pyWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "(formV6.py)"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("(formV6.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIFormV6pyTitleBar() As UIFormV6pyTitleBar
            Get
                If (Me.mUIFormV6pyTitleBar Is Nothing) Then
                    Me.mUIFormV6pyTitleBar = New UIFormV6pyTitleBar(Me)
                End If
                Return Me.mUIFormV6pyTitleBar
            End Get
        End Property
        
        Public ReadOnly Property UIItemWindow() As UIItemWindow1
            Get
                If (Me.mUIItemWindow Is Nothing) Then
                    Me.mUIItemWindow = New UIItemWindow1(Me)
                End If
                Return Me.mUIItemWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIFormV6pyTitleBar As UIFormV6pyTitleBar
        
        Private mUIItemWindow As UIItemWindow1
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIFormV6pyTitleBar
        Inherits WinTitleBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("(formV6.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICloseButton() As WinButton
            Get
                If (Me.mUICloseButton Is Nothing) Then
                    Me.mUICloseButton = New WinButton(Me)
                    Me.mUICloseButton.SearchProperties(WinButton.PropertyNames.Name) = "Close"
                    Me.mUICloseButton.WindowTitles.Add("(formV6.py)")
                End If
                Return Me.mUICloseButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICloseButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIItemWindow1
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.SearchProperties(WinWindow.PropertyNames.Instance) = "3"
            Me.WindowTitles.Add("(formV6.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIFormV6pyClient() As UIFormV6pyClient
            Get
                If (Me.mUIFormV6pyClient Is Nothing) Then
                    Me.mUIFormV6pyClient = New UIFormV6pyClient(Me)
                End If
                Return Me.mUIFormV6pyClient
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIFormV6pyClient As UIFormV6pyClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIFormV6pyClient
        Inherits WinClient
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("(formV6.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIEnterMessageEdit() As WinEdit
            Get
                If (Me.mUIEnterMessageEdit Is Nothing) Then
                    Me.mUIEnterMessageEdit = New WinEdit(Me)
                    Me.mUIEnterMessageEdit.SearchProperties(WinEdit.PropertyNames.Name) = "Enter Message"
                    Me.mUIEnterMessageEdit.WindowTitles.Add("(formV6.py)")
                End If
                Return Me.mUIEnterMessageEdit
            End Get
        End Property
        
        Public ReadOnly Property UIMessageButton() As WinButton
            Get
                If (Me.mUIMessageButton Is Nothing) Then
                    Me.mUIMessageButton = New WinButton(Me)
                    Me.mUIMessageButton.SearchProperties(WinButton.PropertyNames.Name) = "Message"
                    Me.mUIMessageButton.WindowTitles.Add("(formV6.py)")
                End If
                Return Me.mUIMessageButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIEnterMessageEdit As WinEdit
        
        Private mUIMessageButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIFormV7pyWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "(formV7.py)"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("(formV7.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIFormV7pyTitleBar() As UIFormV7pyTitleBar
            Get
                If (Me.mUIFormV7pyTitleBar Is Nothing) Then
                    Me.mUIFormV7pyTitleBar = New UIFormV7pyTitleBar(Me)
                End If
                Return Me.mUIFormV7pyTitleBar
            End Get
        End Property
        
        Public ReadOnly Property UIItemWindow() As UIItemWindow2
            Get
                If (Me.mUIItemWindow Is Nothing) Then
                    Me.mUIItemWindow = New UIItemWindow2(Me)
                End If
                Return Me.mUIItemWindow
            End Get
        End Property
        
        Public ReadOnly Property UIItemWindow1() As UIItemWindow11
            Get
                If (Me.mUIItemWindow1 Is Nothing) Then
                    Me.mUIItemWindow1 = New UIItemWindow11(Me)
                End If
                Return Me.mUIItemWindow1
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIFormV7pyTitleBar As UIFormV7pyTitleBar
        
        Private mUIItemWindow As UIItemWindow2
        
        Private mUIItemWindow1 As UIItemWindow11
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIFormV7pyTitleBar
        Inherits WinTitleBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("(formV7.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICloseButton() As WinButton
            Get
                If (Me.mUICloseButton Is Nothing) Then
                    Me.mUICloseButton = New WinButton(Me)
                    Me.mUICloseButton.SearchProperties(WinButton.PropertyNames.Name) = "Close"
                    Me.mUICloseButton.WindowTitles.Add("(formV7.py)")
                End If
                Return Me.mUICloseButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICloseButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIItemWindow2
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.SearchProperties(WinWindow.PropertyNames.Instance) = "2"
            Me.WindowTitles.Add("(formV7.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIFormV7pyClient() As UIFormV7pyClient
            Get
                If (Me.mUIFormV7pyClient Is Nothing) Then
                    Me.mUIFormV7pyClient = New UIFormV7pyClient(Me)
                End If
                Return Me.mUIFormV7pyClient
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIFormV7pyClient As UIFormV7pyClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIFormV7pyClient
        Inherits WinClient
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("(formV7.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIEnterlocationEdit() As WinEdit
            Get
                If (Me.mUIEnterlocationEdit Is Nothing) Then
                    Me.mUIEnterlocationEdit = New WinEdit(Me)
                    Me.mUIEnterlocationEdit.SearchProperties(WinEdit.PropertyNames.Name) = "Enter location:"
                    Me.mUIEnterlocationEdit.WindowTitles.Add("(formV7.py)")
                End If
                Return Me.mUIEnterlocationEdit
            End Get
        End Property
        
        Public ReadOnly Property UIGetmapButton() As WinButton
            Get
                If (Me.mUIGetmapButton Is Nothing) Then
                    Me.mUIGetmapButton = New WinButton(Me)
                    Me.mUIGetmapButton.SearchProperties(WinButton.PropertyNames.Name) = "Get map"
                    Me.mUIGetmapButton.WindowTitles.Add("(formV7.py)")
                End If
                Return Me.mUIGetmapButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIEnterlocationEdit As WinEdit
        
        Private mUIGetmapButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIItemWindow11
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.SearchProperties(WinWindow.PropertyNames.Instance) = "3"
            Me.WindowTitles.Add("(formV7.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIFormV7pyClient() As WinClient
            Get
                If (Me.mUIFormV7pyClient Is Nothing) Then
                    Me.mUIFormV7pyClient = New WinClient(Me)
                    Me.mUIFormV7pyClient.WindowTitles.Add("(formV7.py)")
                End If
                Return Me.mUIFormV7pyClient
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIFormV7pyClient As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIFormV8pyWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "(formV8.py)"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("(formV8.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItemWindow() As UIItemWindow3
            Get
                If (Me.mUIItemWindow Is Nothing) Then
                    Me.mUIItemWindow = New UIItemWindow3(Me)
                End If
                Return Me.mUIItemWindow
            End Get
        End Property
        
        Public ReadOnly Property UIItemWindow1() As UIItemWindow12
            Get
                If (Me.mUIItemWindow1 Is Nothing) Then
                    Me.mUIItemWindow1 = New UIItemWindow12(Me)
                End If
                Return Me.mUIItemWindow1
            End Get
        End Property
        
        Public ReadOnly Property UIItemWindow2() As UIItemWindow21
            Get
                If (Me.mUIItemWindow2 Is Nothing) Then
                    Me.mUIItemWindow2 = New UIItemWindow21(Me)
                End If
                Return Me.mUIItemWindow2
            End Get
        End Property
        
        Public ReadOnly Property UIFormV8pyTitleBar() As UIFormV8pyTitleBar
            Get
                If (Me.mUIFormV8pyTitleBar Is Nothing) Then
                    Me.mUIFormV8pyTitleBar = New UIFormV8pyTitleBar(Me)
                End If
                Return Me.mUIFormV8pyTitleBar
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItemWindow As UIItemWindow3
        
        Private mUIItemWindow1 As UIItemWindow12
        
        Private mUIItemWindow2 As UIItemWindow21
        
        Private mUIFormV8pyTitleBar As UIFormV8pyTitleBar
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIItemWindow3
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.SearchProperties(WinWindow.PropertyNames.Instance) = "3"
            Me.WindowTitles.Add("(formV8.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIFormV8pyClient() As UIFormV8pyClient
            Get
                If (Me.mUIFormV8pyClient Is Nothing) Then
                    Me.mUIFormV8pyClient = New UIFormV8pyClient(Me)
                End If
                Return Me.mUIFormV8pyClient
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIFormV8pyClient As UIFormV8pyClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIFormV8pyClient
        Inherits WinClient
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("(formV8.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIEnterstartlocationEdit() As WinEdit
            Get
                If (Me.mUIEnterstartlocationEdit Is Nothing) Then
                    Me.mUIEnterstartlocationEdit = New WinEdit(Me)
                    Me.mUIEnterstartlocationEdit.SearchProperties(WinEdit.PropertyNames.Name) = "Enter start location:"
                    Me.mUIEnterstartlocationEdit.WindowTitles.Add("(formV8.py)")
                End If
                Return Me.mUIEnterstartlocationEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIEnterstartlocationEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIItemWindow12
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.SearchProperties(WinWindow.PropertyNames.Instance) = "4"
            Me.WindowTitles.Add("(formV8.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIFormV8pyClient() As UIFormV8pyClient1
            Get
                If (Me.mUIFormV8pyClient Is Nothing) Then
                    Me.mUIFormV8pyClient = New UIFormV8pyClient1(Me)
                End If
                Return Me.mUIFormV8pyClient
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIFormV8pyClient As UIFormV8pyClient1
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIFormV8pyClient1
        Inherits WinClient
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("(formV8.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIEnterendlocationEdit() As WinEdit
            Get
                If (Me.mUIEnterendlocationEdit Is Nothing) Then
                    Me.mUIEnterendlocationEdit = New WinEdit(Me)
                    Me.mUIEnterendlocationEdit.SearchProperties(WinEdit.PropertyNames.Name) = "Enter end location:"
                    Me.mUIEnterendlocationEdit.WindowTitles.Add("(formV8.py)")
                End If
                Return Me.mUIEnterendlocationEdit
            End Get
        End Property
        
        Public ReadOnly Property UIGetmapButton() As WinButton
            Get
                If (Me.mUIGetmapButton Is Nothing) Then
                    Me.mUIGetmapButton = New WinButton(Me)
                    Me.mUIGetmapButton.SearchProperties(WinButton.PropertyNames.Name) = "Get map"
                    Me.mUIGetmapButton.WindowTitles.Add("(formV8.py)")
                End If
                Return Me.mUIGetmapButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIEnterendlocationEdit As WinEdit
        
        Private mUIGetmapButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIItemWindow21
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.SearchProperties(WinWindow.PropertyNames.Instance) = "5"
            Me.WindowTitles.Add("(formV8.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIFormV8pyClient() As WinClient
            Get
                If (Me.mUIFormV8pyClient Is Nothing) Then
                    Me.mUIFormV8pyClient = New WinClient(Me)
                    Me.mUIFormV8pyClient.WindowTitles.Add("(formV8.py)")
                End If
                Return Me.mUIFormV8pyClient
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIFormV8pyClient As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIFormV8pyTitleBar
        Inherits WinTitleBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("(formV8.py)")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICloseButton() As WinButton
            Get
                If (Me.mUICloseButton Is Nothing) Then
                    Me.mUICloseButton = New WinButton(Me)
                    Me.mUICloseButton.SearchProperties(WinButton.PropertyNames.Name) = "Close"
                    Me.mUICloseButton.WindowTitles.Add("(formV8.py)")
                End If
                Return Me.mUICloseButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICloseButton As WinButton
        #End Region
    End Class
End Namespace
