<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja" xml:lang="ja">
  <head>
    <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
    <link rel="stylesheet" href="test-unit.css" type="text/css" />
    <link rel="shortcut icon" href="/favicon.ico" />
    <link rel="icon" href="/favicon.png" />
    <title>Test::Unit - Ruby用単体テストフレームワーク</title>
  </head>
  <body>
    <div class="header">
      <div class="title">
        <a href="index.html.ja">
	  <span class="title">Ruby用単体テストフレームワーク</span>
	  <span class="title-separator">-</span>
	  <span class="title-project">Test::Unit</span>
        </a>
      </div>
      <ul class="other-languages">
        <li id="other-language-english" lang="en" xml:lang="en"><a href="./">English</a></li>
      </ul>
      <ul class="menu">
	<li id="menu-reference"><a href="test-unit/">リファレンスマニュアル</a></li>
	<li id="menu-install"><a href="#test-unit-install">インストール</a></li>
	<li id="menu-developer"><a href="#developer">開発者向け情報</a></li>
      </ul>
    </div>

    <div class="content">
      <div class="main">
	<h1>Test::Unit</h1>
	<p>
	  Test::UnitはRuby用の単体テストフレームワークです。Ruby 1.8まではRuby本体に標準添付されていましたが、Ruby 1.9からはより小さな<a href="http://blog.zenspider.com/minitest/">minitest</a>というフレームワークが標準添付されています。Test::UnitがRuby 1.8に標準添付されていた頃はほとんど機能拡張などがされず、<a href="http://rspec.info/">RSpec</a>などより新しいテスティングフレームワークから見劣りするものになっていました。しかし、Ruby標準添付ではなく、1つのプロジェクトとして開発が進められるようになってからは活発に開発が進められています。Ruby本体のバージョンアップに関係なく新しいバージョンをリリースできるようになったことも開発が活発になった理由の1つです。Ruby標準添付の頃のTest::Unitしか知らない人は、一度、最新のTest::Unitを使ってみてはいかがでしょうか。とても使いやすくなっていることを実感できるはずです。
	</p>
        <h2 id="backward-compatibility">後方互換性</h2>
        <p>
          Test::Unitではなるべく後方互換性を維持したまま開発を進めているため、ほとんどの場合、Ruby 1.8に標準添付されていたTest::Unitで動いたテストは最新のTest::Unitでも動作します。しかし、100%ではありません。もし、完全にRuby 1.8に標準添付されていたバージョンを使用したい場合は、以下のようにtest-unit 1.2.3をインストールし、明示的にtest-unit 1.2.3を利用するようにしてください。
        </p>
        <p>
          <a href="classic/test-unit/">test-unit 1.2.3のリファレンスマニュアル</a>
        </p>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit -v 1.2.3</pre>
        </p>
        <p>
          使用法:
          <pre class="code">require "rubygems"
gem "test-unit", "1.2.3"
require "test/unit"</pre>
        </p>

	<h2 id="feature-split">機能の分割</h2>
        <p>
	  Test::Unitには外部ライブラリに依存している機能がいくつかあります。たとえば、テスト結果をGUIで表示する部分です。これらの部分は別のパッケージとしてリリースすることにし、標準的なコア機能はtest-unitパッケージとしてリリースしています。そのため、付加的な機能を利用する場合は明示的にtest-unitとは異なるパッケージをインストールする必要があります。
        </p>
        <p>
          例えば、GTK+を用いたテスト実行インターフェイスを利用する場合は以下のようになります。
        </p>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit-runner-gtk2</pre>
        </p>
        <p>
          使用法:
          <pre class="code">require "test/unit/runner/gtk2"</pre>
        </p>
        <p>
	  これにより--runner=gtk2オプションが利用できるようになります。--runner=gtk2オプションを指定することによりGTK+を用いたテスト実行インターフェイスを利用できるようになります。
	</p>
        <p>
	  test-unit関連パッケージは以下の通りです。
	</p>

	<h2 id="test-unit">test-unit</h2>
        <p>
          xUnitベースのテスティングフレームワークのコア機能を提供します。Ruby 1.8に標準添付されていた頃と比べると以下のような機能が追加されています。
          <ul>
            <li>テストが失敗したときに期待値と実測値のdiffを表示して違いをわかりやすく表示する機能</li>
            <li>テストの実行結果を色付けして見やすく表示する機能</li>
            <li>環境依存のテストなど、必要のないテストを動的に判断して省略する機能</li>
            <li>複数のsetupとteardownを設定する機能</li>
            <li>テスト毎ではなく、テストケース毎にテスト環境準備・後始末処理を呼び出す機能</li>
            <li>テストに属性を設定する機能</li>
            <li>テストの実行時間が長くなり、テストを実行する気がなくなってしまうことを防ぐために、うまい具合に実行するテスト数を間引いてテストの実行時間を削減する機能</li>
            <li>...</li>
          </ul>
        </p>
	<h3 id="test-unit-latest">test-unit最新リリース</h3>
	<p>
	  2010-07-29にリリースされた2.1.1が最新リリースです。
        </p>
	<h3 id="test-unit-install">test-unitのインストール</h3>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit</pre>
        </p>

	<h2 id="test-unit-full">test-unit-full</h2>
        <p>
          以下の拡張パッケージをまとめてインストールするためのメタパッケージです。
        </p>
	<h3 id="test-unit-full-latest">test-unit-full最新リリース</h3>
	<p>
	  2010-07-17にリリースされた0.0.2が最新リリースです。
        </p>
	<h3 id="test-unit-full-install">test-unit-fullのインストール</h3>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit-full</pre>
        </p>
        <p>
          使い方:
          <pre class="code">require "test/unit/full"</pre>
        </p>

	<h2 id="test-unit-notify">test-unit-notify</h2>
        <p>
          <img class="eye-catch" alt="スクリーンショット"
               src="test-unit-notify/screenshot/notify-on-gnome.png" />
          テストの実行結果をポップアップで通知します。通知方法は環境によって異なります。
          <dl class="feature-list">
            <dt>GNOMEやXfceやKDEなどのX Window Systemベースの環境</dt>
            <dd>notify-sendを使ってD-Bus経由でnotification-daemonにリクエストを送ることにより通知します。notify-sendコマンドが無かったり、notification-daemonが動いていない場合は利用できません。</dd>
            <dt>Mac OS X</dt>
            <dd>Growlを使って通知できるようになるといいですね！（未実装）</dd>
            <dt>Windows</dt>
            <dd>どうやるのがいいのでしょうか。Growl for Windows？（未実装）</dd>
          </dl>
        </p>
	<h3 id="test-unit-notify-latest">test-unit-notify最新リリース</h3>
	<p>
	  2010-07-17にリリースされた0.0.1が最新リリースです。
        </p>
	<h3 id="test-unit-notify-install">test-unit-notifyのインストール</h3>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit-notify</pre>
        </p>
        <p>
          使い方:
          <pre class="code">require "test/unit/notify"</pre>
        </p>
        <p>
          --notifyオプションが追加されます。--notifyオプションを指定するとテスト終了時にテスト結果をポップアップで通知します。
        </p>

	<h2 id="test-unit-gtk2">test-unit-gtk2</h2>
        <p>
          GTK+を用いて実装されたGUIのテスト実行機能です。
        </p>
	<h3 id="test-unit-gtk2-latest">test-unit-gtk2最新リリース</h3>
	<p>
	  2008-06-17にリリースされた0.0.1が最新リリースです。
        </p>
	<h3 id="test-unit-gtk2-install">test-unit-gtk2のインストール</h3>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit-gtk2</pre>
        </p>
        <p>
          使い方:
          <pre class="code">require "test/unit/runner/gtk2"</pre>
        </p>
        <p>
          --runner=gtk2オプションが追加されます。--runner=gtk2オプションを指定するとGTK+ベースのUIでテストを実行します。
        </p>


	<h2 id="test-unit-tk">test-unit-tk</h2>
        <p>
          Tkを用いて実装されたGUIのテスト実行機能です。
        </p>
	<h3 id="test-unit-tk-latest">test-unit-tk最新リリース</h3>
	<p>
	  2008-06-17にリリースされた0.0.1が最新リリースです。
        </p>
	<h3 id="test-unit-tk-install">test-unit-tkのインストール</h3>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit-tk</pre>
        </p>
        <p>
          使い方:
          <pre class="code">require "test/unit/runner/tk"</pre>
        </p>
        <p>
          --runner=tkオプションが追加されます。--runner=tkオプションを指定するとTkベースのUIでテストを実行します。
        </p>

	<h2 id="test-unit-fox">test-unit-fox</h2>
        <p>
          FOX Toolkitを用いて実装されたGUIのテスト実行機能です。
        </p>
	<h3 id="test-unit-fox-latest">test-unit-fox最新リリース</h3>
	<p>
	  2008-06-17にリリースされた0.0.1が最新リリースです。
        </p>
	<h3 id="test-unit-fox-install">test-unit-foxのインストール</h3>
        <p>
          インストール:
          <pre class="command">% sudo gem install test-unit-fox</pre>
        </p>
        <p>
          使い方:
          <pre class="code">require "test/unit/runner/fox"</pre>
        </p>
        <p>
          --runner=foxオプションが追加されます。--runner=foxオプションを指定するとFOX ToolkitベースのUIでテストを実行します。
        </p>

	<h2 id="developer">開発者向け情報</h2>
        <p>
	  Test::UnitはRubyでもっと便利なテスト環境を提供するため、開発に参加してくれる人を募集しています。
          以下は開発に必要となる情報です。
        </p>

	<h3 id="repository">リポジトリ</h3>
	<p>
	  RubyForge上のSubversionリポジトリを利用しています。チェックアウト方法は以下の通りです。
        </p>
        <dl>
          <dt>test-unit</dt>
          <dd><pre class="command">% svn co http://test-unit.rubyforge.org/svn/trunk test-unit</pre></dd>
          <dt>test-unit-full</dt>
          <dd><pre class="command">% svn co http://test-unit.rubyforge.org/svn/extensions/test-unit-full/trunk test-unit-full</pre></dd>
          <dt>test-unit-notify</dt>
          <dd><pre class="command">% svn co http://test-unit.rubyforge.org/svn/extensions/test-unit-notify/trunk test-unit-notify</pre></dd>
          <dt>test-unit-gtk2</dt>
          <dd><pre class="command">% svn co http://test-unit.rubyforge.org/svn/extensions/test-unit-gtk2/trunk test-unit-gtk2</pre></dd>
          <dt>test-unit-tk</dt>
          <dd><pre class="command">% svn co http://test-unit.rubyforge.org/svn/extensions/test-unit-tk/trunk test-unit-tk</pre></dd>
          <dt>test-unit-fox</dt>
          <dd><pre class="command">% svn co http://test-unit.rubyforge.org/svn/extensions/test-unit-fox/trunk test-unit-fox</pre></dd>
        </dl>
      </div>

      <div class="sidebar">
        <h2>プロジェクトについて</h2>
	<ul>
	  <li><a href="http://rubyforge.org/projects/test-unit/">プロジェクトページ</a></li>
	  <li>
	    <a href="http://rubyforge.org/mailman/listinfo/test-unit-users-ja">メーリングリスト</a>
	  </li>
	</ul>
      </div>
    </div>

    <div class="sponsors">
      <p id="sponsor-rubyforge">
        <a href="http://rubyforge.org/projects/groonga/">
          <img src="rubyforge.png" width="120" height="24" border="0" alt="ラングバプロジェクトはRubyForge.orgにホスティングしてもらっています。" />
        </a>
      </p>
      <p id="sponsor-tango">
	<a href="http://tango.freedesktop.org/">
          <img width="120" height="53" border="0" alt="Tango Desktop Projectのアイコンを利用しています。" src="tango-logo.png" />
        </a>
      </p>
      <p id="sponsor-famfamfam">
	<a href="http://www.famfamfam.com/">
          <img width="120" height="18" border="0" alt="famfamfam.comの国旗を利用しています。" src="famfamfam-logo.png" />
        </a>
      </p>
    </div>
  </body>
</html>
